<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.market.main.mapper.qiyuan.UserAddressMapper">
  <resultMap id="BaseResultMap" type="cn.haizhi.market.main.bean.qiyuan.UserAddress">
    <id column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="house_number" jdbcType="VARCHAR" property="houseNumber" />
    <result column="Is_default" jdbcType="BIT" property="isDefault" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    address_id, user_address, phone, user_id, house_number, Is_default, consignee
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddress">
    insert into user_address (address_id, user_address, phone, 
      user_id, house_number, Is_default, 
      consignee)
    values (#{addressId,jdbcType=BIGINT}, #{userAddress,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{houseNumber,jdbcType=VARCHAR}, #{isDefault,jdbcType=BIT}, 
      #{consignee,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddress">
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        address_id,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="houseNumber != null">
        house_number,
      </if>
      <if test="isDefault != null">
        Is_default,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="houseNumber != null">
        #{houseNumber,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=BIT},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddressExample" resultType="java.lang.Long">
    select count(*) from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddress">
    update user_address
    <set>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="houseNumber != null">
        house_number = #{houseNumber,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        Is_default = #{isDefault,jdbcType=BIT},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.market.main.bean.qiyuan.UserAddress">
    update user_address
    set user_address = #{userAddress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      house_number = #{houseNumber,jdbcType=VARCHAR},
      Is_default = #{isDefault,jdbcType=BIT},
      consignee = #{consignee,jdbcType=VARCHAR}
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
</mapper>