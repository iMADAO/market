<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.market.main.mapper.richard.GroupProductMapper">
  <resultMap id="BaseResultMap" type="cn.haizhi.market.main.bean.richard.GroupProduct">
    <id column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_oprice" jdbcType="DECIMAL" property="productOprice" />
    <result column="product_nprice" jdbcType="DECIMAL" property="productNprice" />
    <result column="product_stock" jdbcType="INTEGER" property="productStock" />
    <result column="product_unit" jdbcType="VARCHAR" property="productUnit" />
    <result column="product_desc" jdbcType="VARCHAR" property="productDesc" />
    <result column="send_price" jdbcType="DECIMAL" property="sendPrice" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_name, product_oprice, product_nprice, product_stock, product_unit, 
    product_desc, send_price, category_id, seller_id
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.market.main.bean.richard.GroupProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_product
    where product_id = #{productId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from group_product
    where product_id = #{productId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.haizhi.market.main.bean.richard.GroupProduct">
    insert into group_product (product_id, product_name, product_oprice, 
      product_nprice, product_stock, product_unit, 
      product_desc, send_price, category_id, 
      seller_id)
    values (#{productId,jdbcType=BIGINT}, #{productName,jdbcType=VARCHAR}, #{productOprice,jdbcType=DECIMAL}, 
      #{productNprice,jdbcType=DECIMAL}, #{productStock,jdbcType=INTEGER}, #{productUnit,jdbcType=VARCHAR}, 
      #{productDesc,jdbcType=VARCHAR}, #{sendPrice,jdbcType=DECIMAL}, #{categoryId,jdbcType=BIGINT}, 
      #{sellerId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.market.main.bean.richard.GroupProduct">
    insert into group_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productOprice != null">
        product_oprice,
      </if>
      <if test="productNprice != null">
        product_nprice,
      </if>
      <if test="productStock != null">
        product_stock,
      </if>
      <if test="productUnit != null">
        product_unit,
      </if>
      <if test="productDesc != null">
        product_desc,
      </if>
      <if test="sendPrice != null">
        send_price,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productOprice != null">
        #{productOprice,jdbcType=DECIMAL},
      </if>
      <if test="productNprice != null">
        #{productNprice,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null">
        #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productUnit != null">
        #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null">
        #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="sendPrice != null">
        #{sendPrice,jdbcType=DECIMAL},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.market.main.bean.richard.GroupProductExample" resultType="java.lang.Long">
    select count(*) from group_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.market.main.bean.richard.GroupProduct">
    update group_product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productOprice != null">
        product_oprice = #{productOprice,jdbcType=DECIMAL},
      </if>
      <if test="productNprice != null">
        product_nprice = #{productNprice,jdbcType=DECIMAL},
      </if>
      <if test="productStock != null">
        product_stock = #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productUnit != null">
        product_unit = #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null">
        product_desc = #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="sendPrice != null">
        send_price = #{sendPrice,jdbcType=DECIMAL},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
    </set>
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.market.main.bean.richard.GroupProduct">
    update group_product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_oprice = #{productOprice,jdbcType=DECIMAL},
      product_nprice = #{productNprice,jdbcType=DECIMAL},
      product_stock = #{productStock,jdbcType=INTEGER},
      product_unit = #{productUnit,jdbcType=VARCHAR},
      product_desc = #{productDesc,jdbcType=VARCHAR},
      send_price = #{sendPrice,jdbcType=DECIMAL},
      category_id = #{categoryId,jdbcType=BIGINT},
      seller_id = #{sellerId,jdbcType=BIGINT}
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
</mapper>