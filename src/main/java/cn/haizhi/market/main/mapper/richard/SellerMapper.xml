<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.market.main.mapper.richard.SellerMapper">
  <resultMap id="BaseResultMap" type="cn.haizhi.market.main.bean.richard.Seller">
    <id column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="seller_phone" jdbcType="VARCHAR" property="sellerPhone" />
    <result column="seller_photo" jdbcType="VARCHAR" property="sellerPhoto" />
    <result column="seller_address" jdbcType="VARCHAR" property="sellerAddress" />
    <result column="seller_state" jdbcType="INTEGER" property="sellerState" />
    <result column="idcard_number" jdbcType="VARCHAR" property="idcardNumber" />
    <result column="idcard_fpicture" jdbcType="VARCHAR" property="idcardFpicture" />
    <result column="idcard_bpicture" jdbcType="VARCHAR" property="idcardBpicture" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seller_id, seller_name, seller_phone, seller_photo, seller_address, seller_state, 
    idcard_number, idcard_fpicture, idcard_bpicture, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.market.main.bean.richard.SellerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where seller_id = #{sellerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from seller
    where seller_id = #{sellerId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.haizhi.market.main.bean.richard.Seller">
    insert into seller (seller_id, seller_name, seller_phone, 
      seller_photo, seller_address, seller_state, 
      idcard_number, idcard_fpicture, idcard_bpicture, 
      create_time, update_time)
    values (#{sellerId,jdbcType=BIGINT}, #{sellerName,jdbcType=VARCHAR}, #{sellerPhone,jdbcType=VARCHAR}, 
      #{sellerPhoto,jdbcType=VARCHAR}, #{sellerAddress,jdbcType=VARCHAR}, #{sellerState,jdbcType=INTEGER}, 
      #{idcardNumber,jdbcType=VARCHAR}, #{idcardFpicture,jdbcType=VARCHAR}, #{idcardBpicture,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.market.main.bean.richard.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerName != null">
        seller_name,
      </if>
      <if test="sellerPhone != null">
        seller_phone,
      </if>
      <if test="sellerPhoto != null">
        seller_photo,
      </if>
      <if test="sellerAddress != null">
        seller_address,
      </if>
      <if test="sellerState != null">
        seller_state,
      </if>
      <if test="idcardNumber != null">
        idcard_number,
      </if>
      <if test="idcardFpicture != null">
        idcard_fpicture,
      </if>
      <if test="idcardBpicture != null">
        idcard_bpicture,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="sellerName != null">
        #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhone != null">
        #{sellerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhoto != null">
        #{sellerPhoto,jdbcType=VARCHAR},
      </if>
      <if test="sellerAddress != null">
        #{sellerAddress,jdbcType=VARCHAR},
      </if>
      <if test="sellerState != null">
        #{sellerState,jdbcType=INTEGER},
      </if>
      <if test="idcardNumber != null">
        #{idcardNumber,jdbcType=VARCHAR},
      </if>
      <if test="idcardFpicture != null">
        #{idcardFpicture,jdbcType=VARCHAR},
      </if>
      <if test="idcardBpicture != null">
        #{idcardBpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.market.main.bean.richard.SellerExample" resultType="java.lang.Long">
    select count(*) from seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.market.main.bean.richard.Seller">
    update seller
    <set>
      <if test="sellerName != null">
        seller_name = #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhone != null">
        seller_phone = #{sellerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhoto != null">
        seller_photo = #{sellerPhoto,jdbcType=VARCHAR},
      </if>
      <if test="sellerAddress != null">
        seller_address = #{sellerAddress,jdbcType=VARCHAR},
      </if>
      <if test="sellerState != null">
        seller_state = #{sellerState,jdbcType=INTEGER},
      </if>
      <if test="idcardNumber != null">
        idcard_number = #{idcardNumber,jdbcType=VARCHAR},
      </if>
      <if test="idcardFpicture != null">
        idcard_fpicture = #{idcardFpicture,jdbcType=VARCHAR},
      </if>
      <if test="idcardBpicture != null">
        idcard_bpicture = #{idcardBpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where seller_id = #{sellerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.market.main.bean.richard.Seller">
    update seller
    set seller_name = #{sellerName,jdbcType=VARCHAR},
      seller_phone = #{sellerPhone,jdbcType=VARCHAR},
      seller_photo = #{sellerPhoto,jdbcType=VARCHAR},
      seller_address = #{sellerAddress,jdbcType=VARCHAR},
      seller_state = #{sellerState,jdbcType=INTEGER},
      idcard_number = #{idcardNumber,jdbcType=VARCHAR},
      idcard_fpicture = #{idcardFpicture,jdbcType=VARCHAR},
      idcard_bpicture = #{idcardBpicture,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where seller_id = #{sellerId,jdbcType=BIGINT}
  </update>
</mapper>