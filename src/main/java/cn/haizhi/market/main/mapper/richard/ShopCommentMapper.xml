<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.market.main.mapper.richard.ShopCommentMapper">

  <resultMap id="JoinResultMap" type="cn.haizhi.market.main.view.richard.ShopCommentView">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="comment_grade" jdbcType="INTEGER" property="commentGrade" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_picture" jdbcType="VARCHAR" property="commentPicture" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_head_path" jdbcType="VARCHAR" property="userHead" />
  </resultMap>

  <select id="selectJoin" parameterType="cn.haizhi.market.main.bean.richard.ShopComment" resultMap="JoinResultMap">
    select a.comment_id,comment_grade,comment_content,comment_content,comment_picture,
    b.user_name,b.user_head_path from shop_comment as a join user as b on a.user_id = b.user_id
    <where>
      <if test="shopId != null">
        a.shop_id = #{shopId}
      </if>
    </where>
  </select>

  <resultMap id="BaseResultMap" type="cn.haizhi.market.main.bean.richard.ShopComment">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="comment_grade" jdbcType="INTEGER" property="commentGrade" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_picture" jdbcType="VARCHAR" property="commentPicture" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_grade, comment_content, comment_picture, shop_id, user_id, order_id
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.market.main.bean.richard.ShopCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.haizhi.market.main.bean.richard.ShopComment">
    insert into shop_comment (comment_id, comment_grade, comment_content, 
      comment_picture, shop_id, user_id, 
      order_id)
    values (#{commentId,jdbcType=BIGINT}, #{commentGrade,jdbcType=INTEGER}, #{commentContent,jdbcType=VARCHAR}, 
      #{commentPicture,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{orderId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.market.main.bean.richard.ShopComment">
    insert into shop_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentGrade != null">
        comment_grade,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentPicture != null">
        comment_picture,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentGrade != null">
        #{commentGrade,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentPicture != null">
        #{commentPicture,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.market.main.bean.richard.ShopCommentExample" resultType="java.lang.Long">
    select count(*) from shop_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.market.main.bean.richard.ShopComment">
    update shop_comment
    <set>
      <if test="commentGrade != null">
        comment_grade = #{commentGrade,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentPicture != null">
        comment_picture = #{commentPicture,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.market.main.bean.richard.ShopComment">
    update shop_comment
    set comment_grade = #{commentGrade,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_picture = #{commentPicture,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>